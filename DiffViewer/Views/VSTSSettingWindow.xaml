<Window x:Class="DiffViewer.Views.VSTSSettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:local="clr-namespace:DiffViewer.Views"
        Title="{DynamicResource VSTSSettingWindow}"
        Width="200"
        Height="300"
        MinWidth="264"
        MinHeight="300"
        d:Title="VSTS Setting Window"
        WindowStartupLocation="CenterScreen">

    <d:Window.DataContext>
        <Binding Path="VSTSSetting_ViewModel" Source="{StaticResource VMsLocator}" />
    </d:Window.DataContext>
    <Window.Resources>

        <Style x:Key="NormalTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="TitleLabel"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Padding="5,0"
                                           VerticalAlignment="Center"
                                           Foreground="#FF5E5E5E"
                                           Background="Transparent"
                                           d:Text="hello"
                                           Visibility="Visible"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBox x:Name="Part_TextBox"
                                         Grid.Row="1"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Padding="5,0"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Focusable="True"
                                         TextWrapping="WrapWithOverflow"
                                         Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="TitleLabel" Property="Foreground" Value="Gray" />
                                <Setter TargetName="Part_TextBox" Property="IsEnabled" Value="False" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="DarkGray" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="1.2" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Gray" />
                            </MultiTrigger>
                            <Trigger Property="TextBox.Text" Value="">
                                <Setter TargetName="TitleLabel" Property="Background" Value="#5BEBC44C" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PasswordTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Padding" Value="5,2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="TitleLabel"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Padding="5,0"
                                           VerticalAlignment="Center"
                                           Foreground="#FF5E5E5E"
                                           Background="Transparent"
                                           d:Text="hello"
                                           Visibility="Visible"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBox x:Name="Part_TextBox"
                                         Grid.Row="1"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="2"
                                         Padding="5,0"
                                         Background="Transparent"
                                         BorderThickness="0"
                                         Focusable="True"
                                         TextWrapping="WrapWithOverflow"
                                         Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.Triggers>
                                        <EventTrigger RoutedEvent="TextBoxBase.TextChanged">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="Part_TextBox"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     From="0.6"
                                                                     To="0.1"
                                                                     Duration="0:0:0.5" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </TextBox.Triggers>
                                </TextBox>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="TitleLabel" Property="Foreground" Value="Gray" />
                                <Setter TargetName="Part_TextBox" Property="IsEnabled" Value="False" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="DarkGray" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="1.2" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="Gray" />
                            </MultiTrigger>
                            <Trigger Property="TextBox.Text" Value="">
                                <Setter TargetName="TitleLabel" Property="Background" Value="#5BEBC44C" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Name="BaseGrid" Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBox Name="VSTSUrlTextBox"
                 Style="{StaticResource NormalTextBoxStyle}"
                 Grid.Row="0"
                 d:Tag="Url"
                 Tag="{DynamicResource Url}"
                 Text="{Binding VstsUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <RadioButton Name="AccessByTokenRadioButton"
                         Margin="0,4"
                         d:Content="Token"
                         IsChecked="{Binding IsAccessByToken, UpdateSourceTrigger=PropertyChanged}"
                         Content="{DynamicResource Token}" />
            <RadioButton Name="AccessByCookieRadioButton"
                         Grid.Row="0"
                         Margin="8,4"
                         d:Content="Cookie"
                         Content="{DynamicResource Cookie}" />
        </StackPanel>
        <TextBox Name="AccessModeTextBox"
                 Grid.Row="2"
                 d:Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod lacus quis semper consequat. Donec commodo, erat eu aliquam ornare, ipsum nisl euismod est, at lacinia nunc felis a nisi. Nulla facilisi. Nunc vel lorem id sapien tristique iaculis. Aenean molestie, tellus in suscipit commodo, libero mauris efficitur nibh, a euismod mauris eros nec diam. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec venenatis, ex vel cursus interdum, ipsum lacus sollicitudin sapien, vel rutrum velit velit sit amet lectus. Nam condimentum nisl quis tellus feugiat, vel eleifend erat accumsan. Sed vel ultricies nunc. Duis eget lacinia sapien. Vivamus mollis leo nec tortor faucibus, a efficitur nibh molestie."
                 TextWrapping="Wrap">
            <TextBox.Style>
                <Style BasedOn="{StaticResource PasswordTextBoxStyle}" TargetType="TextBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAccessByToken, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Text" Value="{Binding AccessToken, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="Tag" Value="{DynamicResource Token}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsAccessByToken, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="Text" Value="{Binding AccessCookie, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="Tag" Value="{DynamicResource Cookie}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <Grid Name="BottomButtonGrid" Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Viewbox Grid.Column="0" MaxHeight="32">
                <Label Grid.Column="0"
                       Margin="2,4,2,0"
                       Padding="0"
                       d:Content="AccessCodeInfo"
                       FontSize="10">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CanSave, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Content" Value="{DynamicResource PassAccessCodeInfo}" />
                                    <Setter Property="Foreground" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CanSave, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Content" Value="{DynamicResource ErrorAccessCodeInfo}" />
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </Viewbox>
            <Button Name="SaveButton"
                    Grid.Column="2"
                    Margin="2,4,2,0"
                    Padding="4"
                    d:Content="Save"
                    FontSize="10"
                    FontStretch="SemiExpanded"
                    FontWeight="DemiBold"
                    Command="{Binding SaveAccessCodeCommand}"
                    Content="{DynamicResource Save}">
                <Button.Resources>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SucceedSave}" Value="False">
                                <Setter Property="Background" Value="{StaticResource ThemeWarningSecondary}" />
                                <Setter Property="Foreground" Value="{StaticResource TextLightGrey}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SucceedSave}" Value="True">
                                <Setter Property="Background" Value="{StaticResource ThemePrimary}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>
    </Grid>
</Window>
