<Window x:Class="DiffViewer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:dialogMVVM="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:diffPlex="clr-namespace:DiffPlex.Wpf.Controls;assembly=DiffPlex.Wpf"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:iMy="clr-namespace:DiffViewer.UIActions"
        xmlns:local="clr-namespace:DiffViewer.Views"
        Title="{DynamicResource DiffViewer}"
        Width="800"
        Height="450"
        MinWidth="200"
        MinHeight="100"
        Background="{StaticResource TextLightGrey}"
        dialogMVVM:DialogServiceViews.IsRegistered="True"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None">
    <!--  dialogMVVM:DialogServiceViews.IsRegistered="True"  -->

    <d:Window.DataContext>
        <Binding Path="MainWindow_ViewModel" Source="{StaticResource VMsLocator}" />
    </d:Window.DataContext>

    <Window.Resources>

        <Style x:Key="ThreeStateCheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="IsThreeState" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource IconImageStyle}" TargetType="Image">
                                    <Setter Property="Width" Value="16" />
                                    <Setter Property="Height" Value="16" />
                                </Style>
                            </StackPanel.Resources>
                            <!--  Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,  -->
                            <Image Name="Part_TrueImage"
                                   Visibility="{TemplateBinding IsChecked,
                                                                Converter={StaticResource IsCheckedToVisibility},
                                                                ConverterParameter='True'}"
                                   Source="{StaticResource PassedIcon}" />
                            <Image Name="Part_FalseImage"
                                   Visibility="{TemplateBinding IsChecked,
                                                                Converter={StaticResource IsCheckedToVisibility},
                                                                ConverterParameter='False'}"
                                   Source="{StaticResource FailedIcon}" />
                            <Image Name="Part_NullImage"
                                   Visibility="{TemplateBinding IsChecked,
                                                                Converter={StaticResource IsCheckedToVisibility},
                                                                ConverterParameter='Null'}"
                                   Source="{StaticResource ErrorIcon}" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Name="BaseGrid" Margin="4,0,4,2">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <DockPanel Name="TopToolBar"
                   Grid.Row="0"
                   Height="24"
                   Background="{StaticResource TextLightGrey}"
                   LastChildFill="True"
                   MouseLeftButtonDown="TopToolBar_MouseLeftButtonDown">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button Name="MinimizeButton"
                        Style="{StaticResource IconButtonStyle}"
                        Background="{StaticResource ThemePrimaryAccent}"
                        ToolTip="{DynamicResource Minimize}"
                        Command="{Binding MinimizeWindowCommand}">
                    <Image Style="{StaticResource IconImageStyle}"
                           d:Source="../Resources/Images/Icons/Minimize.png"
                           Source="{StaticResource MinimizeIcon}" />
                </Button>
                <Button Name="MaximizeButton"
                        Style="{StaticResource IconButtonStyle}"
                        Margin="2,0"
                        Background="{StaticResource ThemeSecondary}"
                        ToolTip="{DynamicResource Maximize}"
                        Command="{Binding MaximizeWindowCommand}">
                    <Image Style="{StaticResource IconImageStyle}"
                           d:Source="../Resources/Images/Icons/Maximize.png"
                           Source="{StaticResource MaximizeIcon}" />
                </Button>
                <Button Name="CloseButton"
                        Style="{StaticResource IconButtonStyle}"
                        Background="{StaticResource ThemeWarningSecondary}"
                        ToolTip="{DynamicResource Close}"
                        Command="{Binding CloseWindowCommand}">
                    <Image Style="{StaticResource IconImageStyle}"
                           d:Source="../Resources/Images/Icons/Close.png"
                           Source="{StaticResource CloseIcon}" />
                </Button>
            </StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="7*" />
                </Grid.ColumnDefinitions>
                <!--  Grid.Column="0"  -->
                <Menu Name="TitleMenu"
                      Grid.Column="0"
                      Padding="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Foreground="{StaticResource TextDark}">
                    <MenuItem Padding="8,2"
                              Foreground="{StaticResource TextLightGrey}"
                              Background="{StaticResource ThemeSecondary}"
                              d:Header="DiffViewer"
                              FontSize="12"
                              FontWeight="SemiBold"
                              Header="{DynamicResource DiffViewer}">
                        <MenuItem.Icon>
                            <Image Style="{StaticResource IconImageStyle}" Source="{StaticResource DiffViewerIcon}" />
                        </MenuItem.Icon>


                        <MenuItem Style="{StaticResource NormalMenuItemStyle}"
                                  Header="{DynamicResource Usage}"
                                  Command="{Binding ShowUsageWindowCommand}" />
                        <MenuItem Style="{StaticResource NormalMenuItemStyle}" Header="{DynamicResource Languages}">
                            <MenuItem Style="{StaticResource NormalMenuItemStyle}"
                                      Header="{DynamicResource Chinese}"
                                      Tag="zh-cn"
                                      Command="{Binding SwitchLanguageCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource self}, Path=Tag}" />
                            <MenuItem Style="{StaticResource NormalMenuItemStyle}"
                                      Header="{DynamicResource English}"
                                      Tag="en-us"
                                      Command="{Binding SwitchLanguageCommand}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource self}, Path=Tag}" />
                        </MenuItem>
                        <MenuItem Style="{StaticResource NormalMenuItemStyle}"
                                  Header="{DynamicResource About}"
                                  Command="{Binding ShowAboutWindowCommand}" />
                    </MenuItem>
                </Menu>
                <Menu Name="TestCaseMoreInfoMenu"
                      Grid.Column="1"
                      Margin="4,2"
                      VerticalAlignment="Center"
                      Foreground="{StaticResource TextDark}"
                      FontSize="14">
                    <Menu.Resources>
                        <Style x:Key="InfosMenuItemStyle" TargetType="MenuItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="MenuItem">
                                        <StackPanel Margin="0,1" Orientation="Horizontal">
                                            <TextBlock MinWidth="54" Text="{TemplateBinding Header}" />
                                            <TextBox MinWidth="64"
                                                     Margin="4,0"
                                                     Text="{TemplateBinding Tag}" />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Menu.Resources>
                    <MenuItem BorderBrush="{StaticResource ThemeWarningSecondary}"
                              BorderThickness="1"
                              Header="TestInfos">
                        <MenuItem Style="{StaticResource InfosMenuItemStyle}"
                                  Header="Media"
                                  Tag="{Binding TestCaseShare.Media}" />
                        <MenuItem Style="{StaticResource InfosMenuItemStyle}"
                                  Header="Area"
                                  Tag="{Binding TestCaseShare.Area}" />
                        <MenuItem Style="{StaticResource InfosMenuItemStyle}"
                                  Header="Version"
                                  Tag="{Binding TestCaseShare.Version}" />
                        <MenuItem Style="{StaticResource InfosMenuItemStyle}"
                                  Header="Time"
                                  IsEnabled="False"
                                  Opacity="0.64"
                                  Tag="{Binding TestCaseShare.Time}" />
                    </MenuItem>
                </Menu>
                <!--<TextBox Name="OnlySearchTextBox"
                         Grid.Column="1"
                         Visibility="Hidden"
                         Text="{DynamicResource Search}" />
                <TextBox Name="SearchTextBox"
                         Style="{StaticResource LeftIconTextBoxStyle}"
                         Grid.Column="1"
                         Margin="4,2"
                         VerticalContentAlignment="Center"
                         FontSize="12"
                         GotFocus="SearchTextBox_GotFocus"
                         IsTabStop="True"
                         LostFocus="SearchTextBox_LostFocus"
                         MaxLength="200"
                         Tag="{StaticResource SearchIcon}"
                         ToolTip="{Binding ElementName=OnlySearchTextBox, Path=Text, StringFormat='{}{0}...'}"
                         Text="{Binding SearchText}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return"
                                    Modifiers="Ctrl"
                                    Command="{Binding TrytoSearchTextCommand}"
                                    CommandParameter="{Binding SearchText}" />
                    </TextBox.InputBindings>
                </TextBox>-->
                <StackPanel Grid.Column="2"
                            Margin="4,2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <Button Name="ImportButton"
                            Style="{StaticResource IconButtonStyle}"
                            Background="{StaticResource TextLightGrey}"
                            ToolTip="{DynamicResource Import}">
                        <Image Style="{StaticResource IconImageStyle}"
                               d:Source="../Resources/Images/Icons/Import.png"
                               Source="{StaticResource ImportIcon}" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction EventArgsConverter="{StaticResource MouseButtonClickToBool}"
                                                       Command="{Binding ImportDiffFileCommand}"
                                                       PassEventArgsToCommand="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <TextBlock Name="ImportTextBlock"
                               Margin="4,0,0,0"
                               VerticalAlignment="Center"
                               Foreground="{StaticResource TextDarkGrey}"
                               FontSize="12"
                               ToolTip="{Binding RelativeSource={RelativeSource self}, Path=Text}"
                               Text="{Binding ImportedFileFullPath}">
                        <!--<i:Interaction.Behaviors>
                            <iMy:CopyBehavior ClickTimes="2"
                                              MouseButton="Right"
                                              Text="{Binding ElementName=ImportTextBlock, Path=Text}" />
                        </i:Interaction.Behaviors>-->
                    </TextBlock>
                </StackPanel>
            </Grid>

        </DockPanel>
        <Grid Name="MainFunctionGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="48" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>
            <Grid Name="CenterGrid"
                  Grid.Row="0"
                  Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="8*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--  SelectedItem="{Binding SelectedTestCase}"  -->
                <ListView Grid.Row="1"
                          VerticalAlignment="Top"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.PanningMode="VerticalFirst"
                          SelectedItem="{Binding SelectedTestCase}"
                          SelectionChanged="ListView_SelectionChanged"
                          SelectionMode="Single"
                          SelectedIndex="{Binding SelectedIndex}"
                          ItemsSource="{Binding DiffTestCases, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ListView}">
                            <Setter Property="Background" Value="{StaticResource TextLightGrey}" />
                            <Setter Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid Name="ItemGrid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <CheckBox Style="{StaticResource ThreeStateCheckBoxStyle}"
                                                      Grid.Column="0"
                                                      IsChecked="{Binding IsIdentical}" />
                                            <TextBlock Name="Part_NameTextBlock"
                                                       Grid.Column="1"
                                                       Margin="4,0"
                                                       IsEnabled="False"
                                                       ToolTip="{Binding Name}"
                                                       Text="{Binding Name}" />
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="{StaticResource TextLightGrey}" />
                            <Setter Property="BorderBrush" Value="{StaticResource ThemeSecondary}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsIdentical}" Value="False">
                                    <Setter Property="Background" Value="DarkOrange" />
                                    <Setter Property="BorderBrush" Value="YellowGreen" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsIdentical}" Value="{x:Null}">
                                    <Setter Property="Background" Value="Fuchsia" />
                                    <Setter Property="BorderBrush" Value="BlanchedAlmond" />
                                    <Setter Property="BorderThickness" Value="2" />
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </DataTrigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="IsSelected" Value="True" />
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource ThemeWarningSecondary}" />
                                    <Setter Property="FontWeight" Value="Heavy" />
                                    <Setter Property="FontStyle" Value="Italic" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding DoubleToSelectTestCaseCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>

                <!--  // Use ContentControl to do more funtions  -->
                <local:FunctionControls Grid.Row="2" Height="24" />
            </Grid>
            <GridSplitter Grid.Row="0"
                          Grid.Column="1"
                          Width="5"
                          HorizontalAlignment="Stretch"
                          ShowsPreview="True" />
            <diffPlex:DiffViewer Name="diffPlexDiffViewer"
                                 Grid.Row="0"
                                 Grid.Column="2"
                                 IsSideBySide="{Binding IsSideBySide}"
                                 LinesContext="2"
                                 NewText="{Binding OldResult}"
                                 NewTextHeader="+ Baseline"
                                 OldText="{Binding NewResult}"
                                 OldTextHeader="{Binding SelectedTestCaseName, StringFormat='{}{0} - Actual'}"
                                 TextSearch.Text="{Binding SearchText}"
                                 IsCommandBarVisible="True" />
        </Grid>
    </Grid>
</Window>
